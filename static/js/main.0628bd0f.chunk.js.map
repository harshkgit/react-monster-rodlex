{"version":3,"sources":["components/card-filter/card-filter.component.jsx","components/card/card.component.jsx","components/card-list/card-list.component.jsx","App.js","reportWebVitals.js","index.js"],"names":["CardFilter","placeholder","handleOnChange","type","className","onChange","Card","props","alt","src","monster","id","name","email","CardList","monsters","map","App","handleChange","e","setState","filterValue","target","value","state","fetch","then","response","json","users","catch","error","console","log","this","filterMonsters","filter","toLowerCase","includes","Component","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"uSAGaA,G,MAAa,SAAC,GAAoC,IAAlCC,EAAiC,EAAjCA,YAAaC,EAAoB,EAApBA,eACtC,OAAQ,uBACFC,KAAK,SACLC,UAAU,SACVH,YAAaA,EACbI,SAAUH,MCJPI,G,MAAO,SAACC,GACnB,OACE,sBAAKH,UAAU,iBAAf,UACE,qBACEI,IAAI,UACJC,IAAG,+BAA0BF,EAAMG,QAAQC,GAAxC,6BAEL,6BAAKJ,EAAMG,QAAQE,OACnB,4BAAIL,EAAMG,QAAQG,aCNXC,G,MAAW,SAACP,GACvB,OACE,qBAAKH,UAAU,YAAf,SACGG,EAAMQ,SAASC,KAAI,SAACN,GAAD,OAClB,cAAC,EAAD,CAAuBA,QAASA,GAArBA,EAAQC,WCoCZM,E,kDAxCb,aAAe,IAAD,8BACZ,gBAgBFC,aAAe,SAACC,GACd,EAAKC,SAAS,CAAEC,YAAaF,EAAEG,OAAOC,SAhBtC,EAAKC,MAAQ,CACXT,SAAU,GACVM,YAAa,IAJH,E,gEAQO,IAAD,OAClBI,MAAM,8CACHC,MAAK,SAACC,GAAD,OAAcA,EAASC,UAC5BF,MAAK,SAACG,GACL,EAAKT,SAAS,CAAEL,SAAUc,OAE3BC,OAAM,SAACC,GAAD,OAAWC,QAAQC,IAAIF,Q,+BAOxB,IAAD,EAC2BG,KAAKV,MAA/BT,EADD,EACCA,SAAUM,EADX,EACWA,YACZc,EAAiBpB,EAASqB,QAAO,SAAC1B,GAAD,OACrCA,EAAQE,KAAKyB,cAAcC,SAASjB,EAAYgB,kBAElD,OACE,sBAAKjC,UAAU,MAAf,UACE,kDACA,cAAC,EAAD,CACEH,YAAY,iBACZC,eAAiBgC,KAAKhB,eAGxB,cAAC,EAAD,CAAUH,SAAUoB,W,GAnCVI,aCOHC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBhB,MAAK,YAAkD,IAA/CiB,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCAdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BZ,M","file":"static/js/main.0628bd0f.chunk.js","sourcesContent":["import React from 'react';\r\nimport \"./card-filter.styles.css\";\r\n\r\nexport const CardFilter = ({ placeholder, handleOnChange}) => {\r\n    return (<input\r\n          type=\"search\"\r\n          className=\"search\"\r\n          placeholder={placeholder}\r\n          onChange={handleOnChange}\r\n        /> );\r\n}","import React from \"react\";\r\n\r\nimport \"./card.styles.css\";\r\n\r\nexport const Card = (props) => {\r\n  return (\r\n    <div className=\"card-container\">\r\n      <img\r\n        alt=\"monster\"\r\n        src={`https://robohash.org/${props.monster.id}?&set=set3&size=120x120`}\r\n      />\r\n      <h2>{props.monster.name}</h2>\r\n      <p>{props.monster.email}</p>\r\n    </div>\r\n  );\r\n};\r\n","import React from \"react\";\r\n\r\nimport { Card } from \"./../card/card.component\";\r\n\r\nimport \"./card-list.styles.css\";\r\n\r\nexport const CardList = (props) => {\r\n  return (\r\n    <div className=\"card-list\">\r\n      {props.monsters.map((monster) => (\r\n        <Card key={monster.id} monster={monster} />\r\n      ))}\r\n    </div>\r\n  );\r\n};\r\n","import React, { Component } from \"react\";\n\nimport { CardFilter } from \"./components/card-filter/card-filter.component\";\nimport { CardList } from \"./components/card-list/card-list.component\";\n\nclass App extends Component {\n  constructor() {\n    super();\n    this.state = {\n      monsters: [],\n      filterValue: \"\",\n    };\n  }\n\n  componentDidMount() {\n    fetch(\"https://jsonplaceholder.typicode.com/users\")\n      .then((response) => response.json())\n      .then((users) => {\n        this.setState({ monsters: users });\n      })\n      .catch((error) => console.log(error));\n  }\n\n  handleChange = (e) => {\n    this.setState({ filterValue: e.target.value });\n  }\n\n  render() {\n    const { monsters, filterValue } = this.state;\n    const filterMonsters = monsters.filter((monster) =>\n      monster.name.toLowerCase().includes(filterValue.toLowerCase())\n    );\n    return (\n      <div className=\"App\">\n        <h1> Monster Roldex </h1>\n        <CardFilter\n          placeholder=\"Search Monster\"\n          handleOnChange={ this.handleChange }\n        />\n\n        <CardList monsters={filterMonsters} />\n      </div>\n    );\n  }\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport './App.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}